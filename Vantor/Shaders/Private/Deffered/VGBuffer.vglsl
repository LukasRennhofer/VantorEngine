#version 460 core

layout(location = 0) in vec3 aPosition;
layout(location = 1) in vec2 aUV;
layout(location = 2) in vec3 aNormal;
layout(location = 3) in vec3 aTangent; // TODO
layout(location = 4) in vec3 aBitangent; // TODO

out vec3 FragPos;
out vec2 TexCoords;
out vec3 Normal;

uniform mat4 VModel;

#include <Vantor/VCommon.hglsl>

void main()
{
    vec4 worldPos = VModel * vec4(aPosition, 1.0);
    FragPos = worldPos.xyz; 
    TexCoords = aUV;
    
    mat3 normalMatrix = transpose(inverse(mat3(VModel)));
    Normal = normalMatrix * aNormal;

    gl_Position = Vu_Projection * Vu_View * worldPos;
}