#version 460 core
layout (location = 0) out vec4 gAlbedoSpec;
layout (location = 1) out vec3 gNormal;
layout (location = 2) out vec4 gMaterial;
layout (location = 3) out vec3 gPosition;

in vec2 TexCoords;
in vec3 FragPos;
in vec3 Normal;

uniform sampler2D texture_diffuse1;
uniform sampler2D texture_specular1;

void main()
{    
    // store albedo and diffuse per-fragment color in first buffer
    gAlbedoSpec.rgb = texture(texture_diffuse1, TexCoords).rgb;
    // store specular intensity in gAlbedoSpec's alpha component
    gAlbedoSpec.a = texture(texture_specular1, TexCoords).r;
    
    // also store the per-fragment normals into the gbuffer
    gNormal = normalize(Normal);
    
    // store material properties (metallic, roughness, AO) - for now just set defaults
    gMaterial = vec4(0.0, 0.5, 1.0, 1.0); // metallic=0, roughness=0.5, AO=1, padding=1
    
    // store the fragment position vector in the position gbuffer texture
    gPosition = FragPos;
}